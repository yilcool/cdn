
"use strict";
var Pagination = {
    showPageCount: 6, init: function (obj, callback, topFlag) { this.bindListener(obj, callback, topFlag); }, createHtml: function (pageIndex, recordCount, pageSize) {
        var pageCount = Math.ceil(recordCount / pageSize); var showPageCount = this.showPageCount; var MaxCount = 10000000000; var HalfPageCount = (showPageCount + 1) / 2; var html = []; if (pageCount > MaxCount) { pageCount = MaxCount; }
        if (pageIndex > pageCount - 1) { pageIndex = pageCount - 1; }
        html.push("<span class=\"total\">共" + recordCount + "条</span>"); if (pageIndex > 0) { html.push("<span class=\"previous\"><a href=\"javascript:;\" page= " + (pageIndex - 1) + " data-rec=\"上一页\">«</a></span>"); }
        else { html.push("<span class=\"disable previous\"></span>"); }
        if (pageCount <= showPageCount) {
            for (var i = 0; i < pageCount; i++) {
                if (pageIndex == i) { html.push("<span class=\"current num\">" + (i + 1) + "</span>"); }
                else { html.push("<span class=\"num\"><a href=\"javascript:;\"  page=" + i + ">" + (i + 1) + "</a></span>"); }
            }
        }
        else if (pageIndex < HalfPageCount) {
            for (var i = 0; i < showPageCount - 1; i++) {
                if (pageIndex == i) { html.push("<span class=\"current num\">" + (i + 1) + "</span>"); }
                else { html.push("<span class=\"num\"><a href=\"javascript:;\"  page=" + i + ">" + (i + 1) + "</a></span>"); }
            }
            html.push("<span class=\"dots\">...</span>"); html.push("<span class=\"num\"><a href=\"javascript:;\"  page=" + (pageCount - 1) + ">" + pageCount + "</a></span>");
        }
        else if (pageIndex >= pageCount - HalfPageCount - 1) {
            html.push("<span class=\"num\"><a href=\"javascript:;\" page='0'>" + 1 + "</a></span>"); html.push("<span class=\"dots\">...</span>"); for (var i = pageCount - showPageCount + 1; i < pageCount; i++) {
                if (pageIndex == i) { html.push("<span class=\"current num\">" + (i + 1) + "</span>"); }
                else { html.push("<span class=\"num\"><a href=\"javascript:;\" page=" + i + ">" + (i + 1) + "</a></span>"); }
            }
        }
        else {
            html.push("<span class=\"num\"><a href=\"javascript:;\" page=0>" + 1 + "</a></span>"); html.push("<span class=\"dots\">...</span>"); for (var i = pageIndex - HalfPageCount / 2; i <= pageIndex + HalfPageCount / 2; i++) {
                if (pageIndex == i) { html.push("<span class=\"current num\">" + (i + 1) + "</span>"); }
                else { html.push("<span class=\"num\"><a href=\"javascript:;\" page=" + i + ">" + (i + 1) + "</a></span>"); }
            }
            html.push("<span class=\"dots\">...</span>"); html.push("<span class=\"num\"><a href=\"javascript:;\" page =" + (pageCount - 1) + ">" + pageCount + "</a></span>");
        }
        if (pageIndex < pageCount - 1) { html.push("<span class=\"next\"><a href=\"javascript:;\" page=" + (pageIndex + 1) + " data-rec=\"下一页\">»</a></span>"); }
        else { html.push("<span class=\"disable next\"></span>"); }
        html.push("<span class=\"total total_page\">共" + pageCount + "页</span>"); html.push("<span class=\"page_jump\">到</span><input id='pageInput' class='pageInput' oldpage='' maxlength='" + pageCount + "' type='text' ><span class=\"page_jump\">页</span><button type='button' id='pagebtn' class='pagebtn'>确定</button>"); return html.join("");
    }, bindListener: function (obj, callback, topFlag) {
        var topFlag = topFlag || true; obj.on("click", "a", function () {
            if (typeof callback === "function") { var index = $(this).attr("page"); callback(parseInt(index)); }
            if (topFlag) { $(window).scrollTop(0); }
            return false;
        }); obj.on("click", "button", function () {
            var pageInput = obj.find('input'); if (typeof callback === "function") {
                var index = pageInput.val(); if (index == '') { pageInput.focus(); return false; }
                callback(parseInt(index) - 1);
            }
            return false;
        }); obj.on("keyup", "input", function (e) {
            switch (e.keyCode) { case 37: break; case 38: break; case 39: break; case 40: break; case 13: changePage(); break; case 8: $(e.target).attr('oldpage', $(e.target).val()); break; case 46: $(e.target).attr('oldpage', $(e.target).val()); break; default: validPage(); }
            return false;
        }); function changePage() {
            var pageInput = obj.find('input'); var page = pageInput.val(); var maxPage = parseInt(obj.find(".total_page").html().substring(1)); var pattern = new RegExp("^[1-9]\\d{0," + maxPage.toString().length + "}$"); if (page.trim() == "") { pageInput.focus(); return; }
            if (pattern.test(page)) { page = parseInt(page); maxPage = parseInt(maxPage); if (page > maxPage || page < 0) { pageInput.val("").focus(); return; } } else { pageInput.val("").focus(); return; }
            callback(parseInt(page) - 1);
        }
        function validPage() {
            var pageInput = obj.find('input'); var totalPageHtml = obj.find(".total_page").html(); var maxPage = parseInt(totalPageHtml.substring(1, totalPageHtml.length - 1)); var page = pageInput.val(); var pattern = /^[0-9]+$/; var oldpage = pageInput.attr("oldpage") || ''; if (page.trim() == "") { pageInput.val(""); return; }
            if (!pattern.test(page)) { pageInput.val(oldpage); return; }
            var pageInt = parseInt(page); if (page.substr(0, 1) == '0') { pageInput.val(pageInt); }
            if (pageInt == 0) { pageInput.val(''); return; }
            if (pageInt > parseInt(maxPage)) { pageInput.val(page.substr(0, page.length - 1)); return; }
            pageInput.attr('oldpage', pageInput.val());
        }
    }, Page: function (obj, pageIndex, recordCount, pageSize) { obj.empty(); obj.html(this.createHtml(pageIndex, recordCount, pageSize)); }
};

function UrlJs() { }

UrlJs.dom = function () {
    var domArr = [
        "https://cdn.jsdelivr.net/gh/yilcool/cdn@1.0.8/kongbu/dom-animator.min.js",
        'http://tholman.com/dom-animator/dom-animator.js',
        "https://yilcool.github.io/cdn/kongbu/dom-animator.js",
    ]
    return domArr
}

UrlJs.bootstrapjs = function () {
    var domArr = [
        "https://cdn.staticfile.org/twitter-bootstrap/4.3.1/js/bootstrap.min.js",
        "https://cdn.bootcss.com/twitter-bootstrap/4.3.1/js/bootstrap.min.js",
        "https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js",
        "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js"]

    return domArr
}

UrlJs.popper = function () {
    var domArr = [
        "https://cdn.staticfile.org/popper.js/1.15.0/umd/popper.min.js",
        "https://cdn.bootcss.com/popper.js/1.15.0/popper.min.js",
        "https://cdn.jsdelivr.net/npm/tinymce@5.0.16/tinymce.min.js",
        "https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.0.16/tinymce.min.js"]
    return domArr
}


// UrlJs.crypto = function () {
//     var domArr = [
//         // "23",
//         "https://cdn.staticfile.org/crypto-js/3.1.9-1/crypto-js.min.js",
//         "https://cdn.bootcss.com/crypto-js/3.1.9-1/crypto-js.min.js",
//         "https://cdn.jsdelivr.net/npm/crypto-js@3.1.9-1/crypto-js.min.js",
//         "https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.min.js"]
//     return domArr
// }



UrlJs.tinymce = function () {
    var domArr = [
        // "https://cdn.staticfile.org/tinymce/5.0.16/tinymce.min.js",
        "https://cdn.bootcss.com/tinymce/5.0.15/tinymce.min.js",
        "https://cdn.jsdelivr.net/npm/tinymce@5.0.16/tinymce.min.js",
        "https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.0.16/tinymce.min.js"]
    return domArr
}


UrlJs.zh_CN = function () {
    var domArr = [
        "https://cdn.jsdelivr.net/gh/yilcool/cdn@1.0.8/kongbu/zh_CN.min.js",
        "https://yilcool.github.io/cdn/kongbu/zh_CN.js",
    ]
    return domArr
}


// css
UrlJs.bootstrap4Css = function () {
    var domArr = [
        // "https://cdn.staticfile.org/twitter-bootstrap/4.3.1/css/bootstrap.min.css",
        "https://cdn.bootcss.com/twitter-bootstrap/4.3.1/css/bootstrap.min.css",
        "https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css",
        "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css"
    ]
    return domArr
}

// UrlJs.adminCss = function () {
//     var domArr = [
//         "/static/styles/admin.min.css",
//         "https://cdn.jsdelivr.net/gh/yilcool/cdn@1.0.8/css/admin.min.css",
//         "https://yilcool.github.io/cdn/css/admin.min.css"
//     ]
//     return domArr
// }

UrlJs.fontAwesomeCss = function () {
    var domArr = [
        // "https://cdn.staticfile.org/font-awesome/5.11.2/css/all.min.css",
        "https://cdn.bootcss.com/font-awesome/5.10.2/css/all.min.css",
        "https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.11.2/css/all.min.css",
        "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css"
    ]
    return domArr
}



function WebToolJs() { }

//设置cookie
WebToolJs.setCookie = function (cname, cvalue, miao, path) {
    var d = new Date();
    d.setTime(d.getTime() + (miao * 1000));
    var expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=" + path;
}

//设置cookie
WebToolJs.getCookie = function (cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for (var i = 0; i < ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            // beego就下面不要转码url
            // return c.substring(name.length, c.length);
            // gin要转码，因为gin赋值到cookies会被转码
            return decodeURIComponent(c.substring(name.length, c.length));
        }
    }
    return "";
}
//加密
WebToolJs.setAesString = function (data) {
    var KeyStr = WebToolJs.getAesKey();
    var IvStr = WebToolJs.getAesIv();

    var key = CryptoJS.enc.Utf8.parse(KeyStr);
    var iv = CryptoJS.enc.Utf8.parse(IvStr);
    var encrypted = CryptoJS.AES.encrypt(data, key,
        {
            iv: iv,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.Pkcs7
        });
    return encrypted.toString();    //返回的是base64格式的密文
}

//解密
WebToolJs.getAesString = function (encrypted) {
    var KeyStr = WebToolJs.getAesKey();
    var IvStr = WebToolJs.getAesIv();

    var key = CryptoJS.enc.Utf8.parse(KeyStr);
    var iv = CryptoJS.enc.Utf8.parse(IvStr);
    var decrypted = CryptoJS.AES.decrypt(encrypted, key,
        {
            iv: iv,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.Pkcs7
        });
    return decrypted.toString(CryptoJS.enc.Utf8);
}
// key
WebToolJs.getAesKey = function () {
    var key = 'GOWQMGPRKLBXZUFPLEJAPUCSQKIDNCPS';  //密钥
    return key;
}
// iv
WebToolJs.getAesIv = function () {
    var iv = '2864918564035649';
    return iv;
}
//获取字符串长度（汉字算两个字符，字母数字算一个）
WebToolJs.getByteLen = function (val) {
    var len = 0;
    for (var i = 0; i < val.length; i++) {
        var a = val.charAt(i);
        if (a.match(/[^\x00-\xff]/ig) != null) {
            len += 2;
        }
        else {
            len += 1;
        }
    }
    return len;
}

//下面这个方法是将base64格式的url转成blob对象方便上传
WebToolJs.convertBase64UrlToBlob = function (urlData) { //将Base64转成Blob
    var bytes = window.atob(urlData.split(',')[1]);        //去掉url的头，并转换为byte
    //处理异常,将ascii码小于0的转换为大于0
    var ab = new ArrayBuffer(bytes.length);
    var ia = new Uint8Array(ab);
    for (var i = 0; i < bytes.length; i++) {
        ia[i] = bytes.charCodeAt(i);
    }
    return new Blob([ab], { type: 'image/jpeg' });
}

//下面这个方法是将base64格式的url转成blob对象方便上传
WebToolJs.getImgSize = function (str) { //将Base64转成Blob
    //获取base64图片大小，返回KB数字
    var str = str.replace('data:image/jpeg;base64,', '');//这里根据自己上传图片的格式进行相应修改
    var strLength = str.length;
    var fileLength = parseInt(strLength - (strLength / 8) * 2);
    // 由字节转换为KB
    var size = "";
    size = (fileLength / 1024).toFixed(2);
    return parseInt(size);
}
// blob流转换为base64
WebToolJs.blobToDataURI = function (blob, callback) {
    var reader = new FileReader();
    reader.readAsDataURL(blob);
    reader.onload = function (e) {
        callback(e.target.result);
    }
}



// // 最新评论async
// WebToolJs.AsyncJs = function (arr, callback) {
//     var num = 0;
//     var arrSize = arr.length;

//     //第一个js先检测是否能加载，能加载代表网页的script加载的js无问题，不能加载再用方法循环加载
//     if (num == 0) {
//         $.ajax({
//             url: arr[num],
//             dataType: "text",
//             async: true,
//             cache: true,
//             complete: function (XMLHttpRequest, textStatus) {
//                 var status = XMLHttpRequest.status
//                 // console.log(arr[num] + num);
//                 if (status == 200 || status == 304) {
//                     async()
//                 } else {
//                     if (num >= arrSize - 1) {
//                         if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
//                             callback();
//                         }
//                         return
//                     }
//                     num = num + 1;
//                     async()
//                 }
//             },
//         })
//     }

//     function async() {
//         //动态加载js，并且缓存
//         $.ajax({
//             url: arr[num],
//             dataType: "script",
//             async: true,
//             cache: true,
//             complete: function (XMLHttpRequest, textStatus) {
//                 var status = XMLHttpRequest.status
//                 // console.log(arr[num] + num);
//                 if (status == 200 || status == 304) {
//                     if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
//                         callback();
//                     }
//                     return
//                 } else {
//                     if (num >= arrSize - 1) {
//                         if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
//                             callback();
//                         }
//                         return
//                     }
//                     num = num + 1;
//                     async()
//                 }
//             },
//         })
//     }


// }



// // 最新评论async
// WebToolJs.AsyncCss = function (arr, callback) {

//     var num = 0;
//     var arrSize = arr.length;
//     // var link = arr[num];

//     function async() {
//         $.ajax({
//             url: arr[num],
//             dataType: "text", //不添加这个就会无法识别无限循环，jq的bug
//             async: true,
//             cache: true,
//             complete: function (XMLHttpRequest, textStatus) {
//                 var status = XMLHttpRequest.status
//                 if (status == 200 || status == 304) {
//                     // console.log(status + link + num);
//                     // 因为第一个css已经在headler加载，要是第一个检测到返回200就不重新js里面加载css
//                     if (num != 0) {
//                         $('head').append('<link href="' + arr[num] + '" rel="stylesheet" type="text/css" />');
//                     }
//                     if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
//                         callback();
//                     }
//                     return
//                 } else {
//                     if (num >= arrSize - 1) { //最后一个url
//                         if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
//                             callback();
//                         }
//                         return
//                     }
//                     num = num + 1;
//                     async()
//                 }
//             }
//         });
//     }
//     async();
// }


WebToolJs.CheckCDN = function (weburl, callback) {
    //第一个js先检测是否能加载，能加载代表网页的script加载的js无问题，不能加载再用方法循环加载
    $.ajax({
        url: weburl,
        dataType: "text",
        async: true,
        cache: true,
        complete: function (XMLHttpRequest, textStatus) {
            var status = XMLHttpRequest.status
            if (status == 200 || status == 304) {
                callback(true)
            } else {
                callback(false)
            }
            return;
        }
    })
}


// 最新评论async
WebToolJs.AsyncJs = function (arr, callback) {
    var num = 0;
    var arrSize = arr.length;
    function async() {
        //动态加载js，并且缓存
        $.ajax({
            url: arr[num],
            dataType: "script",
            async: true,
            cache: true,
            complete: function (XMLHttpRequest, textStatus) {
                var status = XMLHttpRequest.status
                // console.log(arr[num] + num);
                if (status == 200 || status == 304) {
                    if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
                        callback();
                    }
                    return
                } else {
                    if (num >= arrSize - 1) {
                        if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
                            callback();
                        }
                        return
                    }
                    num = num + 1;
                    async()
                }
            },
        })
    }
    async()
}

WebToolJs.SetJs = function (arr, weburl, callback) {
    WebToolJs.CheckCDN(weburl, function (bool) {
        // alert(bool);
        // 要是回调检测cdn失效就轮训数组加载js
        if (bool == false) {
            WebToolJs.AsyncJs(arr, callback);
            return;
        }
        // 要是没有失效判断传入是否函数，是函数就回调
        if (typeof callback === 'function') {
            callback();
        }

    });
}



// 最新评论async
WebToolJs.AsyncCss = function (arr, callback) {
    var num = 0;
    var arrSize = arr.length;
    function async() {
        $.ajax({
            url: arr[num],
            dataType: "text", //不添加这个就会无法识别无限循环，jq的bug
            async: true,
            cache: true,
            complete: function (XMLHttpRequest, textStatus) {
                var status = XMLHttpRequest.status
                if (status == 200 || status == 304) {
                    // 因为第一个css已经在headler加载，要是第一个检测到返回200就不重新js里面加载css
                    $('head').append('<link href="' + arr[num] + '" rel="stylesheet" type="text/css" />');
                    if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
                        callback();
                    }
                    return
                } else {
                    if (num >= arrSize - 1) { //最后一个url
                        if (typeof callback === 'function') {//判断是否漏空，没传参数,不是传入方法就不回调
                            callback();
                        }
                        return
                    }
                    num = num + 1;
                    async()
                }
            }
        });
    }
    async();
}

WebToolJs.SetCss = function (arr, weburl, callback) {
    WebToolJs.CheckCDN(weburl, function (bool) {
        // 要是回调检测cdn失效就轮训数组加载js
        if (bool == false) {
            WebToolJs.AsyncCss(arr, callback);
            return;
        }
        // 要是没有失效判断传入是否函数，是函数就回调
        if (typeof callback === 'function') {
            callback();
        }

    });
}


function FunJs() { }
FunJs.getObj = function () {
    var json = WebToolJs.getAesString(WebToolJs.getCookie("wb_info"))
    // console.log(json)
    var obj = JSON.parse(json);
    return obj;
}

FunJs.isLogin = function () {
    if (WebToolJs.getCookie("wb_info") == "" || WebToolJs.getCookie("wb_token") == "") {
        return false;
    }
    //解密cookies里面数据并解析出json
    var obj = FunJs.getObj();
    var arr = ["username", "nickname", "avater", "type"]
    for (var i = 0; i < arr.length; i++) {
        if (!obj.hasOwnProperty(arr[i])) {
            return false;
        }
    }
    return true;
}

FunJs.checkDataList = function () {
    //判断数据的class是否存在
    if ($(".datatb td").length > 0) {
        $(".datatb .c1").hide();
    }
}

FunJs.asyncHtml = function (id) {
    $.ajax({
        async: true,
        type: "get",
        url: "/admin/" + id,
        datatype: 'html',  //这个必须有，加上这个能载入html后运行html里面的js代码，没加就不能运行
        success: function (data) {
            $(".content-wrapper").html(data);
            //兼容样式变化左边底部会
            $(document).ready(function () {
                $(".content-wrapper").css('min-height', $(window).height());
            });
            //浏览器窗口大小变化时
            $(window).resize(function () {
                $(".content-wrapper").css('min-height', $(window).height());
            });
        }, error: function () {
            alert("授权过期，请重新登录");
        }
    });
}


FunJs.editor = function () {

    WebToolJs.AsyncJs(UrlJs.tinymce(), function () {
        editor();
        // WebToolJs.AsyncJs(UrlJs.zh_CN(), function () {
        //     editor();
        // });
    });

    function editor() {
        // WebToolJs.AsyncJs(UrlJs.zh_CN());
        $(document).ready(function () {  //这个加了就兼容火狐
            // tinymce.remove();
            tinymce.execCommand('mceRemoveEditor', true, 'mytextarea');
            tinymce.init({
                selector: '#mytextarea',
                // inline:true,
                menubar: false, //隐藏菜单栏
                branding: false,  //右下角版权图标
                height: 450,
                language_url: 'https://cdn.jsdelivr.net/gh/yilcool/cdn@1.0.8/kongbu/zh_CN.min.js',
                language: 'zh_CN',
                mobile: {
                    theme: 'silver'
                },
                // plugins: 'print preview fullpage powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker imagetools textpattern noneditable help formatpainter permanentpen pageembed charmap tinycomments mentions quickbars linkchecker emoticons',
                plugins: 'quickbars autosave preview link table charmap hr emoticons wordcount insertdatetime link media paste', //选择需加载的插件
                toolbar1: 'undo redo | formatselect fontsizeselect | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify',
                // | fontselect fontsizeselect formatselect  pagebreak emoticons
                toolbar2: 'restoredraft removeformat preview | link table charmap blockquote hr insertdatetime | forecolor backcolor | wordcount quickimage media link',
                // toolbar: 'restoredraft undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image quickimage media pageembed template link anchor codesample | a11ycheck ltr rtl | showcomments addcomment',
                autosave_ask_before_unload: false,//当关闭或跳转URL时，弹出提示框提醒用户仍未保存变更内容。默认开启提示。
                quickbars_selection_toolbar: 'removeformat bold italic underline strikethrough | link blockquote',  //选择文字弹出的快速选择栏

                //复制时候去掉style，仅保留文字
                paste_auto_cleanup_on_paste: true,
                paste_remove_styles: true,
                paste_remove_styles_if_webkit: true,
                paste_strip_class_attributes: true,

                // autosave_restore_when_empty:true,//当编辑器初始化时内容区为空时，Tinymce是否应自动还原存储在本地存储中的草稿。
                // image_title: false, // 是否开启图片标题设置的选择，这里设置否
                // automatic_uploads: true, //开启点击图片上传时，自动进行远程上传操作
                images_upload_handler: function (blobInfo, callback, failure) { // 图片异步上传处理函数
                    // blobInfo.blob() 是blob的对象，而不是blob的图片地址
                    var blob_url = window.URL.createObjectURL(blobInfo.blob()); //blob_url是blob的对象转换为图片的blob地址
                    var blobObj = blobInfo.blob();
                    WebToolJs.blobToDataURI(blobObj, function (base64Data) {    //blob格式再转换为base64格式
                        var upSize = WebToolJs.getImgSize(base64Data);  //上传图片前的size
                        var img = new Image()
                        var canvas = document.createElement('canvas')  //返回一个用于在画布上绘图的环境
                        var ctx = canvas.getContext('2d')//用文件读取对象进行读取
                        img.onload = function () {  //加载途中的宽和高
                            var w = img.naturalWidth
                            var h = img.naturalHeight
                            canvas.width = w;
                            canvas.height = h;
                            ctx.drawImage(img, 0, 0, w, h, 0, 0, w, h); //将图片绘制到canvas上这里大小就是图片大小
                            var value = canvas.toDataURL('image/jpeg', 0.75);//将绘制的canvans再转成base64的url 这个0.3是你要压缩的比例，不要太小会很模糊，也不要太大会很卡
                            // alert(WebToolJs.getImgSize(value));
                            var file, maxSize = 5120;
                            var imgSize = WebToolJs.getImgSize(value); //压缩图片后的size
                            if (imgSize >= upSize) {  //压缩图片比上传的图片要大就不用压缩了
                                if (upSize >= maxSize) {  //上传图片大于5m就错误
                                    alert("图片不能超过5m");
                                    failure("图片不能超过5m");
                                    return
                                }
                                // alert("上传的图片比压缩图片要小就不用压缩了");
                                file = new File([blobObj], 'a.jpg', { type: 'image/jpg' }) //把blob的对象转换为可上传的图片
                            } else {
                                if (imgSize >= maxSize) {  //上传图片大于5m就错误
                                    alert("图片不能超过5m");
                                    failure("图片不能超过5m");
                                    return
                                }
                                var Imgblob = WebToolJs.convertBase64UrlToBlob(value) //将图片base64转换为blob的对象
                                file = new File([Imgblob], 'a.jpg', { type: 'image/jpg' }) //把blob的对象转换为可上传的图片
                            }

                            var formData = new FormData()// ajax上传文件不能像上传普通对象那样，得用上FormData
                            formData.append('file', file)
                            $.ajax({
                                url: "/model/imgup",
                                type: "post",
                                async: true,
                                data: formData,
                                processData: false,
                                contentType: false,
                                dataType: "json",
                                success: function (data) {
                                    // alert(data.location);
                                    callback(data.location);
                                },
                                error: function (e) {
                                    failure("图片上传失败");
                                    alert("图片上传失败");
                                }
                            });

                        };
                        img.οnerrοr = function () { failure("图片上传失败"); };
                        img.src = blob_url;  //加载blob图片地址
                    })
                },
                images_upload_base_path: "/", // 图片上传的基本路径
                images_upload_url: '/model/imgup', // 图片上传的具体地址，该选项一定需要设置，才会出现图片上传选项
            });



            // tinyMCE.selection.setContent("123444");
            // tinyMCE.activeEditor.setContent("123");
        });
    }

}


FunJs.userYear = function (user_creat) {

    //计算两个日期的天数差
    function dateDiff(firstDate, secondDate) {
        var firstDate = new Date(firstDate);
        var secondDate = new Date(secondDate);
        var diff = Math.abs(firstDate.getTime() - secondDate.getTime())
        var result = parseInt(diff / (1000 * 60 * 60 * 24));
        return result
    }

    //将日期转换为yyyy-mm-dd的格式
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;
        return [year, month, day].join('-');
    }

    //当天日期
    var date = new Date();
    var year = date.getFullYear();
    var month = date.getMonth() + 1;
    var day = date.getDate();
    if (month < 10) {
        month = "0" + month;
    }
    if (day < 10) {
        day = "0" + day;
    }
    var nowDate = year + '-' + month + '-' + day;

    //调用函数
    var usr_date = formatDate(user_creat);
    var tian = dateDiff(usr_date, nowDate);

    return tian + "天";
}



function PublicJs() { }

//这个是左边滑动下拉，不能删除备用
PublicJs.slide = function () {
    $.sidebarMenu = function (menu) {
        var animationSpeed = 300;
        $(menu).on('click', 'li a', function (e) {
            var $this = $(this);
            var checkElement = $this.next();
            if (checkElement.is('.treeview-menu') && checkElement.is(':visible')) {
                checkElement.slideUp(animationSpeed, function () {
                    checkElement.removeClass('menu-open');
                });
                checkElement.parent("li").removeClass("active");
            }
            else if ((checkElement.is('.treeview-menu')) && (!checkElement.is(':visible'))) {
                var parent = $this.parents('ul').first();
                var ul = parent.find('ul:visible').slideUp(animationSpeed);
                ul.removeClass('menu-open'); var parent_li = $this.parent("li");
                checkElement.slideDown(animationSpeed, function () {
                    checkElement.addClass('menu-open');
                    parent.find('li.active').removeClass('active');
                    parent_li.addClass('active');
                });
            }
            if (checkElement.is('.treeview-menu')) {
                e.preventDefault();
            }
        });
    }
    $.sidebarMenu($('.sidebar-menu'))
}

PublicJs.slide();


PublicJs.initJs = function () {
    WebToolJs.AsyncJs(UrlJs.dom(), function () {
        var tip = "行家啊！来关注公众号：全球恐怖精选视频，不送你益达，送你源码github";
        var domAnimator = new DomAnimator();
        var frame1 = ['       .-"-.       ',
            '     _/.-.-.\\_     ' + tip,
            '    ( ( o o ) )    ',
            '     |/  "  \\|     ',
            "      \\'/^\\'/      ",
            '      /`\\ /`\\      ',
            '     /  /|\\  \\     ',
            '    ( (/ T \\) )    ',
            '     \\__/^\\__/     '];

        var frame2 = ['       .-"-.       ',
            '     _/_-.-_\\_     ' + tip,
            '    / __> <__ \\    ',
            '   / //  "  \\\\ \\   ',
            "  / / \\'---'/ \\ \\  ",
            '  \\ \\_/`"""`\\_/ /  ',
            '   \\           /   ',
            '    \\         /    ',
            '     |   .   |     ']

        var frame3 = ['       .-"-.       ',
            '     _/_-.-_\\_     ' + tip,
            '    /|( o o )|\\    ',
            '   | //  "  \\\\ |   ',
            "  / / \\'---'/ \\ \\  ",
            '  \\ \\_/`"""`\\_/ /  ',
            '   \\           /   ',
            '    \\         /    ',
            '     |   .   |     ']

        domAnimator.addFrame(frame1);
        domAnimator.addFrame(frame2);
        domAnimator.addFrame(frame3);
        domAnimator.animate(1000);

    });
    WebToolJs.SetCss(UrlJs.bootstrap4Css(), $("#bootstrapcss").attr("href"));
    WebToolJs.SetCss(UrlJs.fontAwesomeCss(), $("#fontcss").attr("href"));
    WebToolJs.AsyncJs(UrlJs.bootstrapjs());
    WebToolJs.AsyncJs(UrlJs.popper());
    WebToolJs.SetJs(UrlJs.tinymce(), $("#tinymcejs").attr("src"));

}


PublicJs.initJs();



function AddArticleJs() { }

AddArticleJs.init = function () {
    FunJs.editor();
    $(".fabu").click(function () {
        $("#state").val('2');
    });

    $(".draft").click(function () {
        $("#state").val('0');
    });
}


/*这里是提交表单前的非空校验*/
AddArticleJs.checkForm = function () {
    $("#con").val(tinymce.activeEditor.getContent());
    var title = $("#title").val();
    var listid = $("#listid").val();
    var state = $("#state").val();
    var con = $("#con").val();
    if (title == "" || title == null || title == undefined) {
        alert("标题不能为空");
    } else if (listid == "" || listid == null || listid == undefined) {
        alert("选择栏不能为空");
    } else if (state == "" || state == null || state == undefined) {
        alert("state不能为空");
    } else if (con == "" || con == null || con == undefined) {
        alert("文章内容不能为空");
    } else {
        // alert("提交")
        var targetUrl = "/model/addarticle";
        var form_data = $("#form").serialize();
        $.ajax({
            type: 'post',
            async: true,
            url: targetUrl,
            cache: false,
            data: form_data,  //重点必须为一个变量如：data
            dataType: 'text',
            success: function (result) {
                // alert(result);
                if (result == "success") {
                    // alert("操作成功!")
                    FunJs.asyncHtml("articlelist");
                } else {
                    alert("操作失败，请重试!")
                }
            },
            error: function () {
                alert("请求失败")
            }
        })

    }
    return false;
}



function ArticleListJs() { }

ArticleListJs.init = function () {

    // //检测是否为空数据
    FunJs.checkDataList();
    // //翻页
    var dataObj = $("#datalist");
    var GetState = dataObj.data('state');
    var GetList = dataObj.data('list');
    var GetDate = dataObj.data('date');
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    $("#date_search").val(GetDate);//设置value为xx的option选项为默认选中
    $("#list_search").val(GetList);//设置value为xx的option选项为默认选中
    $("#state_search").val(GetState);//设置value为xx的option选项为默认选中

    Pagination.init($(".ht-page"), function pageChange(i) {
        var pageUrl = "page=" + i;
        var stateUrl = "state=" + $("#state_search").val(); //从0开始，传后台加1
        var listUrl = "list=" + $("#list_search").val(); //从0开始，传后台加1
        var dateUrl = "date=" + $("#date_search").val(); //从0开始，传后台加1
        var url = "articlelist?" + pageUrl + "&" + stateUrl + "&" + listUrl + "&" + dateUrl;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);



    $(".artlist_del").click(function () {
        $.ajax({
            async: true,
            type: "get",
            url: "/model/delarticle?id=" + $(this).data("href"),
            datatype: 'html',
            success: function (data) {
                if (data == "success") {
                    FunJs.asyncHtml("articlelist");
                } else if (data == "nodel") {
                    alert("已发布的文章不允许删除！")
                } else {
                    alert("操作失败！")
                }
            },
            error: function () {
                alert("服务器异常")
            }
        });
    });

    $(".artlist_et").click(function () {
        var url = "changearticle?id=" + $(this).data("href")
        FunJs.asyncHtml(url);
    });

}

ArticleListJs.choose = function () {
    var pageUrl = "page=0"; //从0开始，传后台加1
    var stateUrl = "state=" + $("#state_search").val(); //从0开始，传后台加1
    var listUrl = "list=" + $("#list_search").val(); //从0开始，传后台加1
    var dateUrl = "date=" + $("#date_search").val(); //从0开始，传后台加1
    var url = "articlelist?" + pageUrl + "&" + stateUrl + "&" + listUrl + "&" + dateUrl;
    FunJs.asyncHtml(url)
}

function BuildJs() { }
//记住密码
BuildJs.init = function () {
    $(".ck").click(function () {
        var val = $(this).data("val");
        $.get("/model/" + $(this).data("val"), function (data) {
            // alert("/model/" + val);
            alert("状态: " + data);
        });
    });
}


function ChangeArticleJs() { }

ChangeArticleJs.init = function () {
    FunJs.editor();
    $(".fabu").click(function () {
        $("#state").val('2');
    });

    $(".draft").click(function () {
        $("#state").val('0');
    });
}

ChangeArticleJs.checkForm = function () {
    $("#con").val(tinymce.activeEditor.getContent());
    var title = $("#title").val();
    var listid = $("#listid").val();
    var state = $("#state").val();
    var con = $("#con").val();
    if (title == "" || title == null || title == undefined) {
        alert("标题不能为空");
    } else if (listid == "" || listid == null || listid == undefined) {
        alert("选择栏不能为空");
    } else if (state == "" || state == null || state == undefined) {
        alert("state不能为空");
    } else if (con == "" || con == null || con == undefined) {
        alert("文章内容不能为空");
    } else {
        // alert("提交")
        var targetUrl = $("#form").attr("action");
        var form_data = $("#form").serialize();
        $.ajax({
            type: 'post',
            async: true,
            url: targetUrl,
            cache: false,
            data: form_data,  //重点必须为一个变量如：data
            dataType: 'text',
            success: function (result) {
                if (result == "success") {
                    // alert("操作成功!")
                    FunJs.asyncHtml("articlelist");
                } else {
                    alert("操作失败，请重试!")
                }
            },
            error: function () {
                alert("请求失败")
            }
        })

    }
    return false;
}


function CommListJs() { }

CommListJs.init = function () {
    // //检测是否为空数据
    FunJs.checkDataList();
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "commlist?page=" + i;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);
}



function DashJs() { }

DashJs.init = function () {

    $(".dash_info_number").each(function (i) {
        var val = $(this).data("val");
        if (val >= 1000) {
            var str = val + ""
            var str_sub = str.substr(0, 1);
            var str_sub2 = str.substr(1, str.length);
            var result = str_sub + "," + str_sub2
            $(this).text(result);
        } else {
            $(this).text(val);
        }

    });


    $(".dash_click").click(function () {
        FunJs.asyncHtml($(this).data("href"));
    });


    FunJs.editor();

    var datalist = [{
        name: '人体の馆',
        artist: '伊藤润二',
        url: 'http://music.163.com/song/media/outer/url?id=414817.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/nI8QzD.th.jpg',
        // lrc: 'lrc1.lrc',
        theme: '#ebd0c2'
    },
    {
        name: '回魂夜',
        artist: '周星驰',
        url: 'http://music.163.com/song/media/outer/url?id=33418886.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/nIvbQJ.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    },
    {
        name: '嫁衣',
        artist: '吴虹飞&幸福大街',
        url: 'http://music.163.com/song/media/outer/url?id=385335.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/nIxNfU.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }
        ,
    {
        name: 'X档案',
        artist: 'The X-Files',
        url: 'http://music.163.com/song/media/outer/url?id=1752876.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/nIz2Eq.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    },
    {
        name: '朱(あけ)に染まる',
        artist: '地狱少女',
        url: 'http://music.163.com/song/media/outer/url?id=533171.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/noCnMD.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }, {
        name: '窮地/omen',
        artist: '芳賀敬太',
        url: 'http://music.163.com/song/media/outer/url?id=501771.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/noEHSI.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }, {
        name: '前往恐怖的邀请',
        artist: '秋山裕和 / むにょっ',
        url: 'http://music.163.com/song/media/outer/url?id=33737084.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/noe2yq.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }, {
        name: '寂れた町',
        artist: '高梨康治',
        url: 'http://music.163.com/song/media/outer/url?id=530975.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/nonzzd.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }, {
        name: 'Solitude of frenzy',
        artist: '濱本麻央',
        url: 'http://music.163.com/song/media/outer/url?id=433493.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/nourFO.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }, {
        name: '伽椰子の呻吟声',
        artist: '佐藤史朗',
        url: 'http://music.163.com/song/media/outer/url?id=25904326.mp3',
        cover: 'https://s2.ax1x.com/2019/09/17/noKE0x.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    }, {
        name: '凶夢伝染',
        artist: 'Another',
        url: 'http://music.163.com/song/media/outer/url?id=551248.mp3',
        cover: 'https://s2.ax1x.com/2019/09/18/nTUrm8.th.jpg',
        // lrc: 'lrc2.lrc',
        theme: '#46718b'
    },

    ]

    var ap = new APlayer({
        container: document.getElementById('aplayer'),
        mini: false,
        autoplay: false,
        theme: '#FADFA3',
        loop: 'all',
        order: 'random',
        preload: 'auto',
        volume: 0.7,
        mutex: true,
        listFolded: false,
        listMaxHeight: 90,
        // lrcType: 3,
        audio: datalist,
    });
}



DashJs.checkForm = function () {

    var title = $("#title").val();
    //获取编辑器内容，赋值var判断是否为空
    $("#con").val(tinymce.activeEditor.getContent());
    var con = $("#con").val();

    if (title == "" || title == null || title == undefined) {
        alert("标题不能为空");
        return false;
    }

    if (con == "" || con == null || con == undefined) {
        alert("文章内容不能为空");
        return false;
    }

    var targetUrl = "/model/addarticle";
    var form_data = $("#form").serialize();
    $.ajax({
        type: 'post',
        async: true,
        url: targetUrl,
        data: form_data,  //重点必须为一个变量如：data
        dataType: 'text',
        success: function (result) {
            if (result == "success") {
                FunJs.asyncHtml("articlelist");
            } else {
                alert("操作失败，请重试!")
            }
        },
        error: function () {
            alert("请求失败")
        }
    })
    return false;
}


function ExamineJs() { }

ExamineJs.init = function () {
    FunJs.editor();
    $(".reject").click(function () {
        $("#state").val('1');
    });

    $(".pass").click(function () {
        $("#state").val('3');
    });

}

ExamineJs.checkForm = function () {

    $("#con").val(tinymce.activeEditor.getContent());

    var title = $("#title").val();
    var listid = $("#listid").val();
    var state = $("#state").val();
    var con = $("#con").val();

    if (title == "" || title == null || title == undefined) {
        alert("标题不能为空");
    } else if (listid == "" || listid == null || listid == undefined) {
        alert("选择栏不能为空");
    } else if (state == "" || state == null || state == undefined) {
        alert("state不能为空");
    } else if (con == "" || con == null || con == undefined) {
        alert("文章内容不能为空");
    } else {
        var form_data = $("#add_form").serialize();
        $.ajax({
            type: 'post',
            url: "/model/examinearticle",
            async: true,
            data: form_data,
            success: function (result) {
                // alert(result)
                if (result == "success") {
                    FunJs.asyncHtml("examinelist");
                } else {
                    alert("操作失败，请重试!")
                }
            },
            error: function () {
                alert("服务器异常")
            }
        })


    }
    return false;

}




function ExamineListJs() { }

ExamineListJs.init = function () {
    //翻页
    var dataObj = $("#datalist");
    var GetState = dataObj.data('state');
    var GetList = dataObj.data('list');
    var GetDate = dataObj.data('date');
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    $("#date_search").val(GetDate);//设置value为xx的option选项为默认选中
    $("#list_search").val(GetList);//设置value为xx的option选项为默认选中
    $("#state_search").val(GetState);//设置value为xx的option选项为默认选中

    Pagination.init($(".ht-page"), function pageChange(i) {
        var pageUrl = "page=" + i;
        var stateUrl = "state=" + $("#state_search").val(); //从0开始，传后台加1
        var listUrl = "list=" + $("#list_search").val(); //从0开始，传后台加1
        var dateUrl = "date=" + $("#date_search").val(); //从0开始，传后台加1
        var url = "examinelist?" + pageUrl + "&" + stateUrl + "&" + listUrl + "&" + dateUrl;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);

    $(".artlist_del").click(function () {
        var id = $(this).data("href");
        $.ajax({
            async: true,
            type: "get",
            url: "/model/examineartdel?id=" + id,
            datatype: 'html',
            success: function (data) {
                alert(data)
                if (data == "success") {
                    FunJs.asyncHtml("examinelist");
                } else {
                    alert("操作失败，请重试!")
                }
            },
            error: function () {
                alert("服务器异常")
            }
        });
    });

    $(".artlist_et").click(function () {
        //   alert("gg123");
        var id = $(this).data("href");
        $.ajax({
            async: true,
            type: "get",
            url: "/admin/examine?id=" + id,
            datatype: 'html',
            success: function (data) {
                $(".content-wrapper").html(data);
            }
        });
    });

}


ExamineListJs.choose = function () {
    var pageUrl = "page=0"; //从0开始，传后台加1
    var stateUrl = "state=" + $("#state_search").val(); //从0开始，传后台加1
    var listUrl = "list=" + $("#list_search").val(); //从0开始，传后台加1
    var dateUrl = "date=" + $("#date_search").val(); //从0开始，传后台加1
    var url = "examinelist?" + pageUrl + "&" + stateUrl + "&" + listUrl + "&" + dateUrl;
    FunJs.asyncHtml(url);
}


//     Pagination.init($(".ht-page"), function pageChange(i) {
//         var pageUrl = "page=" + i; //从0开始，传后台加1
//         var stateUrl = "state=" + $("#state_search").val(); //从0开始，传后台加1
//         var listUrl = "list=" + $("#list_search").val(); //从0开始，传后台加1
//         var dateUrl = "date=" + $("#date_search").val(); //从0开始，传后台加1
//         var url = "examinelist?" + pageUrl + "&" + stateUrl + "&" + listUrl + "&" + dateUrl
//         FunJs.asyncHtml(url);
//     });

//     /*
//          * 首次调用
//          * @param  object:翻页容器对象
//          * @param  number:当前页 0就是第一页，里面默认是0+1页开始
//          * @param  number:总条数
//          * @param  number:每页数据条数
//          * */
//     Pagination.Page($(".ht-page"), {{.GetPage }}, {{.TotalRecord }}, { {.NumPage } });
//       // Pagination.Page($(".ht-page"), 0, 30, 2);









// }

// ExamineJs.checkForm = function () {

//     $("#con").val(tinymce.activeEditor.getContent());

//     var title = $("#title").val();
//     var listid = $("#listid").val();
//     var state = $("#state").val();
//     var con = $("#con").val();

//     if (title == "" || title == null || title == undefined) {
//         alert("标题不能为空");
//     } else if (listid == "" || listid == null || listid == undefined) {
//         alert("选择栏不能为空");
//     } else if (state == "" || state == null || state == undefined) {
//         alert("state不能为空");
//     } else if (con == "" || con == null || con == undefined) {
//         alert("文章内容不能为空");
//     } else {
//         var form_data = $("#add_form").serialize();
//         $.ajax({
//             type: 'post',
//             url: "/model/examinearticle",
//             async: true,
//             data: form_data,
//             success: function (result) {
//                 // alert(result)
//                 if (result == "success") {
//                     FunJs.asyncHtml("examinelist");
//                 } else {
//                     alert("操作失败，请重试!")
//                 }
//             },
//             error: function () {
//                 alert("服务器异常")
//             }
//         })


//     }
//     return false;

// }


function ExCommListJs() { }

ExCommListJs.init = function () {
    // //检测是否为空数据
    FunJs.checkDataList();
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "excommlist?page=" + i;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);


    $(".excommlist_del").click(function () {
        $.ajax({
            type: 'get',
            async: true,
            url: "/model/examinecomm?id=" + $(this).data("val"),
            cache: false,
            dataType: 'text',
            success: function (result) {
                if (result == "success") {
                    FunJs.asyncHtml("excommlist");
                } else {
                    alert("操作失败，请重试!")
                }
            },
            error: function () {
                alert("请求失败")
            }
        })

    });





}


function FansListJs() { }

FansListJs.init = function () {
    // $(".click").click(function () {
    //     FunJs.asyncHtml($(this).data("href"));
    // });

    // //检测是否为空数据
    FunJs.checkDataList();
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "fanslist?page=" + i;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);

    $('.fanslist_usertime').each(function (i) {
        var time = $(this).data("val");
        $(this).text(FunJs.userYear(time));
    });
   

}




function FocusListJs() { }

FocusListJs.init = function () {
    $(".foclist_ck").click(function () {
        $.ajax({
            async: true,
            type: "get",
            url: "/model/delfocus?id=" + $(this).data("id"),
            success: function (data) {
                if (data == "success") {
                    FunJs.asyncHtml("focuslist");
                } else if (data == "not") {
                    alert("操作失败");
                } else {
                    alert("操作失败");
                }
            }, error: function () {
                alert("请求失败");
            }
        });
    });

    // //检测是否为空数据
    FunJs.checkDataList();
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "focuslist?page=" + i;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);

}

function MainJs() { }

MainJs.init = function () {
    $(".menu_bell").each(function () {
        if ($(this).data("val") >= 100) {
            $(this).text("99+");
        } else {
            $(this).text($(this).data("val"));
        }

    });

    var obj = FunJs.getObj();
    $('#menu_avater').attr("src", obj.avater);
    $("#menu_nickname").text(obj.nickname);

    FunJs.asyncHtml("dash");

    $(".click").click(function () {
        FunJs.asyncHtml($(this).data("href"));
    });

    $(".nav_bth").click(function () {
        if ($(window).width() >= 768) {
            return
        }

        if ($('body').is('.sidenbar-close')) {
            $("body").removeClass("sidenbar-close");
            $("body").addClass("sidenbar-on");

        } else {
            $("body").removeClass("sidenbar-on");
            $("body").addClass("sidenbar-close");
        }

    });

    if ($(window).width() < 768) {
        $("body").removeClass("sidenbar-on");
        $("body").addClass("sidenbar-close");
    }

    $(".content-wrapper").click(function () {
        if ($(window).width() >= 768) {
            return
        }
        $("body").removeClass("sidenbar-on");
        $("body").addClass("sidenbar-close");

    });

    //浏览器窗口大小变化时
    $(window).resize(function () {
        if ($(window).width() >= 768) {
            $("body").removeClass("sidenbar-close");
            $("body").addClass("sidenbar-on");
        } else {
            $("body").removeClass("sidenbar-on");
            $("body").addClass("sidenbar-close");
        }
    });

}





function MsgListJs() { }

MsgListJs.init = function () {
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');
    var status = dataObj.data('status');
    
    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "msglist?page=" + i + "&status=" + status;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);

    $("#msg_status").val(status);//设置value为xx的option选项为默认选中

    //判断数据的class是否存在
    FunJs.checkDataList();
    
    $(".msglist_et").click(function () {
        window.open($(this).data("link"));
        // 0是未读状态
        if ($(this).data("status") == 0) {
            $.ajax({
                async: true,
                type: "get",
                url: "/model/upmsg?id=" + $(this).data("id"),
            });
        }

    });

    $(".msglist_del").click(function () {
        $.ajax({
            async: true,
            type: "get",
            url: "/model/delmsg?id=" + $(this).data("val"),
            success: function (data) {
                if (data == "success") {
                    var url = "?id=" + $(this).data("val") + "&status=" + $("#msg_status").val()
                    FunJs.asyncHtml("msglist" + url);
                } else if (data == "not") {
                    alert("只能删除已读消息");
                } else {
                    alert("操作失败");
                }
            }, error: function () {
                alert("请求失败");
            }
        });

    });


    $(".msglist_status").each(function () {
        if ($(this).data("val") == 1) {
            $(this).addClass("badge-secondary");
            $(this).text("已读");
        // } else if ($(this).data("val") == 6) {
        //     $(this).addClass("badge-info");
        //     $(this).text("全站");
        } else {
            $(this).addClass("badge-danger");
            $(this).text("未读");
        }
    });

}


MsgListJs.choose = function () {
    var statusUrl = "&status=" + $("#msg_status").val(); //从0开始，传后台加1
    var urlstr = "?page=0" + statusUrl
    var url = "msglist" + urlstr;
    FunJs.asyncHtml(url)
}



function PersonalJs() { }

PersonalJs.init = function () {


    var obj = FunJs.getObj();
    var nickname = obj.nickname;
    var username = obj.username;
    var email = obj.email;
    var desc = obj.desc;
    var avater = obj.avater;

    $("#nickname").val(nickname);
    $("#username").val(username);
    $("#email").val(email);
    $("#desc").val(desc);
    $(".personal_avater").attr("src", avater);


}

PersonalJs.imgUp = function () {

    $(".personal_avater").click(function () {
        $("#file").click();
    });


    $("#file").change(function () {
        var filePath = $(this).val(), //获取input的value,里面是文件的路径
            fileFormat = filePath.substring(filePath.lastIndexOf('.')).toLowerCase(),
            imgBase64 = '', //存储图片的base64
            maxSize = 2 * 1024 * 1024,
            fileObj = document.getElementById('file').files[0], //上传文件的对象,要这样写才行，用jquery写法获取不到对象
            filesize = fileObj.size;
        // console.log(fileObj.size)
        //检查文件格式
        if (!fileFormat.match(/.png|.jpg|.jpeg|.gif/)) {
            alert('文件类型错误,文件格式必须为:png/jpg/jpeg!')
            return;
        }
        if (filesize > 1000000) {
            alert("上传图片大小不得大于1M");
            return;
        }

        compress(fileObj, function (imgBase64) {
            imgBase64 = imgBase64;
            $('.personal_avater').attr('src', imgBase64);
            // console.log(imgBase64)
            $('#av').val(imgBase64);
        })


    });


    //不对图片进行压缩
    function directTurnIntoBase64(fileObj, callback) {
        var r = new FileReader();
        //转成base64
        r.onload = function () {
            imgBase64 = r.result;
            //   console.log(imgBase64);
            callback(imgBase64)
        }
        r.readAsDataURL(fileObj);//转成base64格式
    }

    //对图片进行压缩

    function compress(fileObj, callback) {
        if (typeof (FileReader) === 'undefined') {
            console.log("当前浏览器内核不支持base64图片压缩")
            directTurnIntoBase64(fileObj, callback);
        } else {
            try {

                var reader = new FileReader();
                reader.addEventListener("load", function (e) {
                    // console.log(e.target.result)    //转换后的文件数据存储在e.target.result中
                    var image = $('<img/>');
                    // 这是定义的图片加载会发生的响应
                    image.on("load", function () {
                        var squareW = 80,//定义画布大小,也就是图片压缩之后的像素
                            squareH = 80,
                            canvas = document.createElement('canvas'),
                            context = canvas.getContext('2d'),
                            imageWidth = 0, //压缩图片大小
                            imageHeight = 0,
                            offsetX = 0,
                            offsetY = 0,
                            data = '';

                        canvas.width = squareW;
                        canvas.height = squareH;
                        context.clearRect(0, 0, squareW, squareH);

                        if (this.width > squareW) {
                            // console.log(this.width)
                            // console.log(this.height)
                            imageWidth = Math.round(squareW);
                            imageHeight = squareH;
                            offsetX = Math.round((imageWidth - squareW) / 2);
                        } else {
                            imageHeight = Math.round(squareH);
                            imageWidth = squareW;
                            offsetY = Math.round((imageHeight - squareH) / 2)
                        }
                        // drawImage开始绘制this这个就是当前图片传进去
                        context.drawImage(this, offsetX, offsetY, imageWidth, imageHeight);
                        // 返回base64
                        var data = canvas.toDataURL('image/jpeg')
                        callback(data)
                    });
                    // 创建一个图片把上传返回的base64赋值后就能在加载中获取图片的宽和高度
                    image.attr('src', e.target.result)
                }, false);
                reader.readAsDataURL(fileObj);

            } catch (e) {
                console.log('压缩失败!')
                //调用不压缩方法
                directTurnIntoBase64(fileObj, callback)
            }
        }
    }


}


PersonalJs.checkForm = function () {
    var nickname = $("#nickname").val();

    if (nickname == "" || nickname == null || nickname == undefined) {
        alert("用户昵称不能为空");
        return false
    }
    // var targetUrl = $("#form").attr("action");
    var form_data = $("#form").serialize();
    $.ajax({
        type: 'post',
        async: true,
        url: "/model/personal",
        data: form_data,  //重点必须为一个变量如：data
        success: function (result) {
            if (result == "fail") {
                alert("操作失败，请重试!")
            } else if (result == "success") {
                // 返回success是没上传图片
                var obj = FunJs.getObj();
                obj.desc = $("#desc").val();
                obj.nickname = $("#nickname").val();

                var Aesjson = WebToolJs.setAesString(JSON.stringify(obj));
                WebToolJs.setCookie('wb_info', Aesjson, 3600, '/');

                $("#menu_nickname").text(obj.nickname);

                alert("操作成功！")
            } else {
                alert("操作成功！")
                // f返回的result是图片路径
                var obj = FunJs.getObj();
                obj.desc = $("#desc").val();
                obj.avater = result;
                obj.nickname = $("#nickname").val();

                var Aesjson = WebToolJs.setAesString(JSON.stringify(obj));
                WebToolJs.setCookie('wb_info', Aesjson, 3600, '/');

                $("#menu_nickname").text(obj.nickname);
                $("#menu_avater").attr("src", result);

            }
        },
        error: function () {
            alert("请求失败")
        }
    })

    return false
}



PersonalJs.upload = function () {
    var targetUrl = $("#form").attr("action");
    var formData = new FormData($("#uploadForm")[0])  //创建一个forData 
    formData.append('img', $('#pic_img')[0].files[0]) //把file添加进去  name命名为img
    $.ajax({
        url: targetUrl,
        data: formData,
        type: "POST",
        async: true,
        contentType: false,
        processData: false,
        success: function (data) {
            alert(data)
            //成功
        },
        error: function () {
            alert("data")
            //失败
        }
    })
}



function WebMsgListJs() { }

WebMsgListJs.init = function () {
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');
    var status = dataObj.data('status');

    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "msglist?page=" + i + "&status=" + status;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);

    $("#msg_status").val(status);//设置value为xx的option选项为默认选中

    //判断数据的class是否存在
    FunJs.checkDataList();
}

WebMsgListJs.choose = function () {
    var statusUrl = "&status=" + $("#msg_status").val(); //从0开始，传后台加1
    var urlstr = "?page=0" + statusUrl
    var url = "webmsglist" + urlstr;
    FunJs.asyncHtml(url)
}

function ZanListJs() { }

ZanListJs.init = function () {
    // //检测是否为空数据
    FunJs.checkDataList();
    // //翻页
    var dataObj = $("#datalist");
    var GetPage = dataObj.data('getpage');
    var TotalRecord = dataObj.data('totalrecord');
    var NumPage = dataObj.data('numpage');

    Pagination.init($(".ht-page"), function pageChange(i) {
        var url = "zanlist?page=" + i;
        FunJs.asyncHtml(url)
    });
    Pagination.Page($(".ht-page"), GetPage, TotalRecord, NumPage);
}
